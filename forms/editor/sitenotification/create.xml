<?xml version="1.0" encoding="UTF-8"?>
<panel>
	<section labeli18n="modules.notification.bo.general.General">
		<field name="subject" />
		<field name="body" />
		<field name="template" />
	</section>
	<section labeli18n="modules.notification.bo.general.Advanced">
		<field name="header" />
		<field name="footer" />
		<field name="senderEmail" />
	</section>
	<fieldinput name="availableparameters" type="hidden"/>
	<fieldinput name="website" type="hidden"/>
	<xul>
		<javascript>
			<constructor><![CDATA[
				this.extendMethod('updateCommandsUI', this.updateCommandsUIExtend);
				this.extendMethod('fireInitializeComplete', this.fireInitializeCompleteExtend);
			]]></constructor>
			
			<method name="updateCommandsUIExtend">
				<parameter name="event" />
				<body><![CDATA[
					this.getElementByAnonId('save_properties').disabled = this.error;
				]]></body>
			</method>
			
			<method name="fireInitializeCompleteExtend">
				<parameter name="result" />
				<body><![CDATA[
					try
					{
						var fields = this.fields;
						var params = result.contents.availableparameters;
						this.setTextTemplate(fields.body, params);
						this.setTextTemplate(fields.header, params);
						this.setTextTemplate(fields.footer, params);
						fields.website.value = this.documentEditor.getAttribute('websiteId');
						if (this.documentEditor.hasAttribute('duplicate'))
						{
							fields.subject.focus();
						}
					}
					catch (e)
					{
						wCore.error("notification.propertiespanel.fireInitializeCompleteExtend", [result], e);
					}
				]]></body>
			</method>
			
			<method name="setTextTemplate">
				<parameter name="field" />
				<parameter name="availableparameters" />
				<body><![CDATA[
					var toolbar = field.toolBar;				
					toolbar.clearTextTemplate();
					if (availableparameters)
					{
						var parameters = availableparameters.split(/\s|,/);
						for (var i = 0; i < parameters.length; i++)
						{
							var param = parameters[i];
							if (param.length > 0)
							{
								if (param[0] != '{') {param = '{' + param + '}';}
								toolbar.addTextTemplate(param, param);
							}
						}
					}
				]]></body>
			</method>
								
			<method name="prepareInitializeValues">
				<parameter name="values" />
				<body><![CDATA[
					if (this.documentEditor.hasAttribute('duplicate'))
					{
						values.duplicate = 'true';
					}
				]]></body>
			</method>

			<method name="preparePropertiesValues">
				<parameter name="values" />
				<body><![CDATA[
					if (this.documentEditor.hasAttribute('duplicate'))
					{
						values.duplicate = 'true';
						
						var fields = this.fields;
						for (var name in fields)
						{
							values[name] = fields[name].value;
						}
					}
				]]></body>
			</method>
		</javascript>
	</xul>
</panel>