<?xml version="1.0"?>
<bindings xmlns="http://www.mozilla.org/xbl" xmlns:xbl="http://www.mozilla.org/xbl" xmlns:html="http://www.w3.org/1999/xhtml"
	xmlns:xul="http://www.mozilla.org/keymaster/gatekeeper/there.is.only.xul">

	<!-- Site notifications. -->

	<binding id="cSiteNotifGrid" extends="widgets.cGrid#cAbstractSortableGrid">
		<implementation>
			<constructor><![CDATA[
				this.fireEvent('gridInitialised');
			]]></constructor>

			<method name="getEditor">
				<body><![CDATA[	
					var pnode = this.parentNode;
					while (pnode && pnode.tagName != 'cdocumenteditor') {pnode = pnode.parentNode;}
					return pnode;				
				]]></body>
			</method>

			<method name="execute_edit">
				<parameter name="rowNode" />
				<parameter name="rowData" />
				<body><![CDATA[
					if (this.disabled) {return;}
					// TODO: for now, document editor is correctly loaded only if it is opened on resume panel. When it will be fixed, replace it by the properties one.
					var uri = ['notification', 'openDocument', 'modules_notification_sitenotification', rowData.id, 'resume'].join(',');
					openActionUri(uri);
				]]></body>
			</method>

			<method name="execute_delete">
				<parameter name="rowNode" />
				<parameter name="rowData" />
				<body><![CDATA[
					if (this.disabled) {return;}
					if (confirm("${trans:m.notification.bo.doceditor.confirm-delete,ucf,js}"))
					{
						var editor = this.getEditor();
						var callBack = function(result) {editor.executeServerAction('sitenotifications', 'Initialize');};
						wCore.executeJSON('notification', 'DeleteJSON', {cmpref: rowData.id, lang: Context.W_LANG}, callBack, true);
					}
				]]></body>
			</method>
		</implementation>

		<content>
			<xul:grid flex="1" anonid="grid" xbl:inherits="disabled">
				<xul:columns>
					<xul:column />
					<xul:column flex="1" />
					<xul:column flex="1" />
					<xul:column />
				</xul:columns>
				<xul:rows anonid="document-rows">
					<xul:row class="head" anonid="head-row">
						<xul:label name="status" />
						<xul:label name="website" value="${trans: m.notification.bo.doceditor.column-website,ucf}" />
						<xul:label name="langs" value="${trans: m.notification.bo.doceditor.column-langs,ucf}" />
						<xul:label name="actions" value="${trans: m.notification.bo.doceditor.column-actions,ucf}" />
					</xul:row>
				</xul:rows>
			</xul:grid>
			<xul:row anonid="template-row" class="document" hidden="true">
				<xul:cpublicationcell />
				<xul:label value="" />
				<xul:label value="" />
				<xul:toolbar class="actions">
					<xul:toolbarbutton action="edit" image="{IconsBase}/small/edit.png" 
						tooltiptext="${trans:m.uixul.bo.actions.edit,ucf,attr}" />
					<xul:toolbarbutton action="delete" image="{IconsBase}/small/delete.png"
						tooltiptext="${trans:m.uixul.bo.actions.delete,ucf,attr}" />
				</xul:toolbar>
			</xul:row>
		</content>
	</binding>

	<!-- Preview. -->

	<binding id="cPreviewNotificationDialog" extends="core.wDialog#wDialog">
		<implementation>
			<constructor><![CDATA[
				//wCore.debug('cPreviewNorificationDialog.constructor');
			]]></constructor>

			<method name="onInitialize">
				<body><![CDATA[
					this.autoResize(window.innerWidth-100, window.innerHeight-100);
					var id = this.parameters.cmpref;
					var lang = this.parameters.lang;
					this.getElementByAnonId('html-iframe').setAttribute('src', wCore.buildServerUrl('notification', 'Preview', { type: 'html', cmpref: id, lang: lang }));
					this.getElementByAnonId('text-iframe').setAttribute('src', wCore.buildServerUrl('notification', 'Preview', { type: 'text', cmpref: id, lang: lang }));
				]]></body>
			</method>

			<method name="onSend">
				<body><![CDATA[
					var id = this.parameters.cmpref;
					var emails = this.getElementByAnonId('emails').value.split("\n");					
					var result = wCore.executeJSON('notification', 'SendTestNotification', {cmpref: id, emails: emails, lang: this.parameters.lang}, null, true);
					if (result.status != 'OK')
					{
						alert(result.contents.errorMessage);
					}
					this.controller.closeModalDialog();
				]]></body>
			</method>

			<method name="onCancel">
				<body><![CDATA[
					this.controller.closeModalDialog();
				]]></body>
			</method>
		</implementation>
		<xbl:content>
			<xul:vbox flex="1">
				<xul:hbox class="dialog-header">
					<xul:label value="${trans: m.notification.bo.general.preview-notification,ucf}" class="dialog-title" />
					<xul:spacer flex="1" />
					<xul:vbox pack="center">
						<xul:toolbarbutton image="{IconsBase}/small/delete.png" oncommand="onCancel();" tooltiptexts="${trans: m.uixul.bo.dialog.cancel,ucf}" />
					</xul:vbox>
				</xul:hbox>
				<xul:vbox flex="1">
					<xul:tabbox flex="1">
						<xul:tabs anonid="tabs">
							<xul:tab label="${trans: m.notification.bo.general.tab-html,ucf}" image="{IconsBase}/small/preview.png" />
							<xul:tab label="${trans: m.notification.bo.general.tab-text,ucf}" image="{IconsBase}/small/text.png" />
							<xul:tab label="${trans: m.notification.bo.general.tab-send,ucf}" image="{IconsBase}/small/mail.png" />
						</xul:tabs>
						<xul:tabpanels flex="1">
							<xul:tabpanel flex="1">
								<xul:iframe flex="1" anonid="html-iframe" />
							</xul:tabpanel>
							<xul:tabpanel flex="1">
								<xul:iframe flex="1" anonid="text-iframe" />
							</xul:tabpanel>
							<xul:tabpanel flex="1">
								<xul:vbox>
									<xul:label control="your-name">${trans: m.notification.bo.general.email-adresses,ucf,lab}</xul:label>
									<xul:textbox id="cPreviewNotificationDialog-emails" anonid="emails" multiline="true" rows="15" />
									<xul:hbox pack="end" align="center">
										<xul:button image="{IconsBase}/small/sending.png" oncommand="onSend();"
											label="${trans: m.notification.bo.general.send-test-notification,ucf,attr}" />
									</xul:hbox>
								</xul:vbox>
							</xul:tabpanel>
						</xul:tabpanels>
					</xul:tabbox>
				</xul:vbox>
			</xul:vbox>
		</xbl:content>
	</binding>
</bindings>